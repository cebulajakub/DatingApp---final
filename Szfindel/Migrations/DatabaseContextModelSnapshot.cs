// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Szfindel.Models;

#nullable disable

namespace Szfindel.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Szfindel.Models.AccountUser", b =>
                {
                    b.Property<int>("AccountUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountUserId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AccountUserId");

                    b.ToTable("AccountUsers");
                });

            modelBuilder.Entity("Szfindel.Models.Hobby", b =>
                {
                    b.Property<int>("HobbyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HobbyId"));

                    b.Property<string>("HobbyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HobbyId");

                    b.ToTable("Hobbies");

                    b.HasData(
                        new
                        {
                            HobbyId = 1,
                            HobbyName = "Koszykówka"
                        },
                        new
                        {
                            HobbyId = 2,
                            HobbyName = "Netflix & Hill"
                        },
                        new
                        {
                            HobbyId = 3,
                            HobbyName = "Programming"
                        },
                        new
                        {
                            HobbyId = 4,
                            HobbyName = "ONS"
                        },
                        new
                        {
                            HobbyId = 5,
                            HobbyName = "FWB"
                        },
                        new
                        {
                            HobbyId = 6,
                            HobbyName = "Muzyka"
                        },
                        new
                        {
                            HobbyId = 7,
                            HobbyName = "Gotowanie"
                        },
                        new
                        {
                            HobbyId = 8,
                            HobbyName = "Wędkowanie"
                        });
                });

            modelBuilder.Entity("Szfindel.Models.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatchId"));

                    b.Property<int>("AccountUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMatch")
                        .HasColumnType("bit");

                    b.Property<int>("MatchUserId")
                        .HasColumnType("int");

                    b.HasKey("MatchId");

                    b.HasIndex("AccountUserId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("Szfindel.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Szfindel.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("AccountUserId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("AccountUserId")
                        .IsUnique()
                        .HasFilter("[AccountUserId] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Szfindel.Models.UserHobby", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("HobbyId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "HobbyId");

                    b.HasIndex("HobbyId");

                    b.ToTable("UserHobby");
                });

            modelBuilder.Entity("Szfindel.Models.Match", b =>
                {
                    b.HasOne("Szfindel.Models.AccountUser", "AccountUser")
                        .WithMany("Matches")
                        .HasForeignKey("AccountUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountUser");
                });

            modelBuilder.Entity("Szfindel.Models.Message", b =>
                {
                    b.HasOne("Szfindel.Models.AccountUser", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Szfindel.Models.AccountUser", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Szfindel.Models.User", b =>
                {
                    b.HasOne("Szfindel.Models.AccountUser", "AccountUser")
                        .WithOne("User")
                        .HasForeignKey("Szfindel.Models.User", "AccountUserId");

                    b.Navigation("AccountUser");
                });

            modelBuilder.Entity("Szfindel.Models.UserHobby", b =>
                {
                    b.HasOne("Szfindel.Models.Hobby", "Hobby")
                        .WithMany("UserHobbies")
                        .HasForeignKey("HobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Szfindel.Models.AccountUser", "User")
                        .WithMany("UserHobbies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hobby");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Szfindel.Models.AccountUser", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");

                    b.Navigation("User");

                    b.Navigation("UserHobbies");
                });

            modelBuilder.Entity("Szfindel.Models.Hobby", b =>
                {
                    b.Navigation("UserHobbies");
                });
#pragma warning restore 612, 618
        }
    }
}
